
#version 330
#extension GL_ARB_shading_language_include : require

#include </common.gls>
#include </deferredshading/common.gls>

out vec4 color;

in block
{
    vec2 Position;
    vec2 UV;
} In;

void main(void)
{
   // Unpack the GBuffer
    GBufferData gbd = UnpackGBuffer(In.UV);
	
	// Convert the data into the material structure
	Material mat;
	MaterialFromGBuffer(gbd, mat);

	// Reconstruct the world position
	vec3 position = CalculateWorldPos(In.Position, gbd.Depth);

	// Calculate the spot light color
	vec3 finalColor = CalculateFourLights(position, mat);

	/*if( In.Position.x < 0 && In.Position.y < 0)
	  color = vec4(1.0,0,0,1);
	else if( In.Position.x > 0 && In.Position.y < 0)
	  color = vec4(0,1,0,1);
	else if( In.Position.x < 0 && In.Position.y > 0)
	  color = vec4(0,0,1,1);
	else
	  color = vec4(1,1,1,1);
	  */
 
	color = vec4(finalColor, 1.0);
}