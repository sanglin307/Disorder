//shader common
cbuffer SceneProperty
{
	float3 AmbientLowColor;
	float3 AmbientUpperColor;
}

cbuffer CameraTransforms
{
	matrix CameraView;
	matrix CameraProjection;	
	float3 CameraPosition;
}

cbuffer ObjectTransform
{
	matrix WorldTransform;
	matrix WorldNormalTransform;  // translate for normal.
}

cbuffer MaterialProperty
{
	float3 DiffuseColor;
	float3 SpecularColor;
	float  Shininess;
}

cbuffer DirectionLightProperty
{
	float3 DirectionLightColor;
	float3 DirectionLightDir;	
	float  DirectionLightIntensity;
} 

float3 CalculateAmbient(float3 normal, float3 color)
{
	// Convert from [-1, 1] to [0, 1]
	float up = normal.y * 0.5 + 0.5;

	// Calculate the ambient value
	float3 ambient = AmbientLowColor + up * (AmbientUpperColor - AmbientLowColor);

	// Apply the ambient value to the color
	return ambient * color;
}

